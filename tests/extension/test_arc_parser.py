from shapely.extension.geometry.arc import Arc
from shapely.extension.util.arc_parser import ArcParser
from shapely.wkt import loads


def test_arc_parser_case0():
    curve = loads(
        'LINESTRING (621354.2500429893 20060.412111206, 621367.005063501 20060.850680125826, 621379.7504872781 20061.511788051568, 621392.4824319413 20062.395233603344, 621405.1970192168 20063.500747675087, 621417.8903761182 20064.827993516494, 621430.5586361261 20066.37656683563, 621443.1979403655 20068.145995922052, 621455.8044387822 20070.13574179053, 621468.3742913145 20072.345198345192, 621480.9036690636 20074.77369256417, 621493.3887554596 20077.4204847046, 621505.8257474242 20080.284768527952, 621518.2108565293 20083.365671545627, 621530.5403101507 20086.662255284726, 621542.8103526173 20090.1735155739, 621555.0172463553 20093.89838284926, 621567.1572730266 20097.83572248014, 621579.2267346616 20101.984335114754, 621591.2219547852 20106.3429570455, 621603.1392795373 20110.91026059392, 621614.9750787852 20115.6848545151, 621626.72574723 20120.665284421488, 621638.387705504 20125.85003322589, 621649.9574012619 20131.23752160358, 621661.4313102623 20136.826108473422, 621672.8059374412 20142.614091497715, 621684.0778179772 20148.59970760076, 621695.2435183461 20154.7811335059, 621706.2996373676 20161.156486290936, 621717.2428072406 20167.72382396164, 621728.0696945696 20174.481146043345, 621738.7770013798 20181.426394190283, 621749.3614661217 20188.55745281259, 621759.8198646652 20195.872149720726, 621770.1490112804 20203.368256787155, 621780.3457596092 20211.04349062505, 621790.4070036237 20218.89551328383, 621800.329678571 20226.92193296133, 621810.1107619083 20235.12030473236, 621819.7472742232 20243.488131293467, 621829.2362801404 20252.022863723607, 621838.5748892168 20260.72190226062, 621847.7602568216 20269.582597093082, 621856.7895850029 20278.60224916752, 621865.6601233399 20287.778111010535, 621874.3691697806 20297.107387565724, 621882.9140714653 20306.58723704507, 621891.2922255337 20316.214771794588, 621899.5010799195 20325.987059173935, 621907.5381341258 20335.9011224497, 621915.400939988 20345.953941702177, 621923.0871024193 20356.142454745233, 621930.5942801404 20366.4635580591, 621937.9201863919 20376.914107735724, 621945.062589632 20387.490920436438, 621952.0193142154 20398.19077436163, 621958.7882410564 20409.010410232146, 621965.3673082744 20419.94653228209, 621971.7545118217 20430.995809262742, 621977.9479060943 20442.154875457294, 621983.9456045242 20453.420331706086, 621989.7457801545 20464.788746442016, 621995.3466661954 20476.256656735823, 622000.7465565628 20487.82056935094, 622005.9438063978 20499.476961807566, 622010.9368325677 20511.222283455634, 622015.7241141484 20523.0529565564, 622020.3041928875 20534.96537737222, 622024.6756736488 20546.955917264324, 622028.8372248367 20559.020923798103, 622032.7875788026 20571.156721855692, 622036.5255322303 20583.359614755434, 622040.0499465029 20595.62588537795, 622043.3597480499 20607.951797298374, 622046.4539286734 20620.333595924534, 622049.3315458562 20632.767509640624, 622051.9917230482 20645.249750956074, 622054.4336499337 20657.776517659266, 622056.656582678 20670.343993975705, 622058.6598441543 20682.94835173037, 622060.4428241497 20695.58575151378, 622062.0049795514 20708.252343851545, 622063.3458345116 20720.94427037693, 622064.4649805928 20733.657665006172, 622065.3620768925 20746.388655116105, 622066.0368501463 20759.133362723813, 622066.4890948117 20771.887905667903, 622066.7186731307 20784.648398791032, 622066.7500429893 20791.42168706667)')
    arc = ArcParser(curve).arc()
    assert arc
    assert isinstance(arc, Arc)
    assert curve.buffer(1e-6).intersection(arc).length / arc.length >= 1 - 1e-4


def test_arc_parser_case1():
    curve = loads(
        'LINESTRING (622066.7500429893 20791.42168706667, 622066.8614159061 20778.659614859407, 622067.1955007316 20765.901430102967, 622067.7521957 20753.15101906402, 622068.5313312368 20740.41226564128, 622069.5326700096 20727.689050182445, 622070.7559070012 20714.9852483022, 622072.2006696016 20702.304729701656, 622073.866517722 20689.651356989623, 622075.752943929 20677.028984506003, 622077.859373599 20664.44145714773, 622080.1851650932 20651.892609197574, 622082.7296099527 20639.386263156186, 622085.4919331151 20626.92622857772, 622088.47129315 20614.516300909414, 622091.6667825154 20602.16026033545, 622095.0774278344 20589.86187062549, 622098.7021901913 20577.62487798817, 622102.5399654484 20565.453009929992, 622106.5895845823 20553.349974119876, 622110.8498140395 20541.319457259775, 622115.3193561132 20529.36512396167, 622119.9968493374 20517.490615631286, 622124.8808689022 20505.69954935889, 622129.9699270881 20493.995516817493, 622135.2624737187 20482.382083168784, 622140.756896633 20470.86278597716, 622146.4515221765 20459.44113413213, 622152.3446157111 20448.12060677949, 622158.4343821435 20436.90465226154, 622164.7189664718 20425.79668706667, 622171.1964543508 20414.800094788694, 622177.8648726749 20403.918225096142, 622184.7221901792 20393.154392711935, 622191.7663180584 20382.51187640369, 622198.9951106029 20371.993917984968, 622206.4063658526 20361.6037213278, 622213.9978262672 20351.344451386736, 622221.7671794144 20341.219233234784, 622229.7120586738 20331.23115111148, 622237.8300439585 20321.38324748339, 622246.1186624514 20311.678522117363, 622254.5753893589 20302.119931166755, 622263.1976486803 20292.71038627097, 622271.9828139916 20283.45275366853, 622280.9282092466 20274.34985332401, 622290.0311095911 20265.40445806903, 622299.2887421936 20256.619292757652, 622308.6982870894 20247.997033436328, 622318.2568780399 20239.54030652877, 622327.961603406 20231.251688035918, 622337.809507034 20223.13370275126, 622347.7975891574 20215.188823491757, 622357.9228073093 20207.41947034459, 622368.1820772504 20199.828009929992, 622378.5722739076 20192.416754680347, 622389.0902323263 20185.1879621358, 622399.7327486345 20178.14383425658, 622410.4965810188 20171.286516752283, 622421.3784507113 20164.61809842825, 622432.3750429893 20158.1406105493, 622443.4830081841 20151.856026220987, 622454.6989627021 20145.766259788583, 622466.0194900547 20139.87316625393, 622477.4411418998 20134.178540710407, 622488.9604390914 20128.68411779612, 622500.57387274 20123.39157116552, 622512.2779052815 20118.302512979575, 622524.0689715539 20113.41849341471, 622535.9434798843 20108.741000190592, 622547.8978131823 20104.271458116975, 622559.9283300425 20100.01122865967, 622572.0313658526 20095.96160952584, 622584.2032339107 20092.123834268703, 622596.4402265481 20088.499071911774, 622608.738616258 20085.08842659279, 622621.094656832 20081.89293722735, 622633.5045845003 20078.913577192467, 622645.9646190788 20076.151254030076, 622658.4709651201 20073.606809170567, 622671.0198130703 20071.281017676494, 622683.6073404286 20069.174588006477, 622696.2297129122 20067.2881617994, 622708.8830856242 20065.622313678956, 622721.5636042248 20064.17755107862, 622734.2674061051 20062.95431408708, 622746.9906215639 20061.952975314176, 622759.7293749866 20061.173839777388, 622772.4797860256 20060.61714480896, 622779.2500429893 20060.412111206)')

    arc = ArcParser(curve).arc()
    assert arc
    assert isinstance(arc, Arc)
    assert curve.buffer(1e-6).intersection(arc).length / arc.length >= 1 - 1e-4

